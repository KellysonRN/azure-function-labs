name: SonarCloud
on:
  push:
    branches:
      - main
    paths:
      - '**/src/**'
      - '**/.github/**'
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build:
    name: Build and analyze
    runs-on: windows-latest
    steps:
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
          
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
          
      - name: Show Directory content
        shell: powershell
        run: |
          dir ${{ GITHUB.WORKSPACE }}/src    
          
      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
          
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v1
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
          
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
          
      - name: Install dotnet coverage
        shell: powershell
        run: |
          dotnet tool install --global dotnet-coverage    
          
      - name: Test
        run: dotnet test src --no-build --verbosity normal --collect:"XPlat Code Coverage" --logger trx --results-directory coverage
        
      - name: Show Directory content
        shell: powershell
        run: |
          dir ${{ GITHUB.WORKSPACE }}/src    

      - name: Copy Coverage to Predictable Location
        run: cp coverage/*/coverage.cobertura.xml coverage/coverage.cobertura.xml

      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: coverage/coverage.cobertura.xml
          badge: true
          format: 'markdown'
          output: 'both'

      - name: Add Coverage PR Comment
        uses: marocchino/sticky-pull-request-comment@v2
        if: github.event_name == 'pull_request'
        with:
          recreate: true
          path: code-coverage-results.md

      - name: Write to Job Summary
        run: cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY
        
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}/src
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"KellysonRN_azure-functions-labs" /o:"kellysonrn" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.projectBaseDir="${{ GITHUB.WORKSPACE }}/src" /d:sonar.cs.vscoveragexml.reportsPaths=${{ GITHUB.WORKSPACE }}/src/coverage.xml          
          dotnet build src --no-incremental
          cd src
          dotnet-coverage collect 'dotnet test' -f xml -o 'coverage.xml'
          cd ..
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"
